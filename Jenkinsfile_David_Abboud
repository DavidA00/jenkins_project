pipeline { 
    agent any

    environment {
        PROJECT_PATH = 'C:\\Users\\David Abboud\\OneDrive - American University of Beirut\\EECE 435L\\Lab10-david-abboud'
        VIRTUAL_ENV = 'C:\\Users\\David Abboud\\OneDrive - American University of Beirut\\EECE 435L\\Lab10-david-abboud\\venv'
        PYTHON_PATH = 'C:\\Users\\David Abboud\\OneDrive - American University of Beirut\\EECE 435L\\Lab10-david-abboud\\venv\\Scripts\\python.exe'
        DEPLOY_DIR = 'C:\\Users\\David Abboud\\OneDrive - American University of Beirut\\EECE 435L\\DeployedApp'
    }

    stages {
        stage('Setup') {
            steps {
                script {
                    bat """
                    call "${VIRTUAL_ENV}\\Scripts\\activate"
                    "${PYTHON_PATH}" -m pip install --upgrade pip
                    if exist "${PROJECT_PATH}\\requirements.txt" (
                        "${PYTHON_PATH}" -m pip install -r "${PROJECT_PATH}\\requirements.txt"
                        "${PYTHON_PATH}" -m pip install coverage bandit
                    ) else (
                        echo "requirements.txt not found at ${PROJECT_PATH}!" && exit /b 1
                    )
                    """
                }
            }
        }

        stage('Lint') {
            steps {
                script {
                    bat """
                    call "${VIRTUAL_ENV}\\Scripts\\activate"
                    flake8 "${PROJECT_PATH}\\app.py"
                    """
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    bat """
                    call "${VIRTUAL_ENV}\\Scripts\\activate"
                    pytest "${PROJECT_PATH}\\tests\\test_app.py"
                    """
                }
            }
        }

        stage('Coverage') {
            steps {
                script {
                    bat """
                    call "${VIRTUAL_ENV}\\Scripts\\activate"
                    coverage run --source="${PROJECT_PATH}" -m pytest "${PROJECT_PATH}\\tests\\test_app.py"
                    coverage report
                    coverage html -d "${PROJECT_PATH}\\coverage_html"
                    """
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    bat """
                    call "${VIRTUAL_ENV}\\Scripts\\activate"
                    bandit -r "${PROJECT_PATH}" -f txt -o "${PROJECT_PATH}\\bandit_report.txt"
                    """
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    bat """
                    REM Ensure deployment directory exists
                    if not exist "${DEPLOY_DIR}" (
                        mkdir "${DEPLOY_DIR}"
                    )

                    REM Copy application files to deployment directory
                    xcopy "${PROJECT_PATH}\\app.py" "${DEPLOY_DIR}" /Y

                    REM Copy test and other related files if needed
                    xcopy "${PROJECT_PATH}\\tests" "${DEPLOY_DIR}\\tests" /E /I /Y

                    REM Confirm deployment success
                    echo "Application successfully deployed to ${DEPLOY_DIR}!"
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
